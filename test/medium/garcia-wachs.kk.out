Node(Node('a',Node('b','c')),Node('d','e'))
.copy : forall<a> (list1<a>, head : ?a, tail : ?list<a>) -> list1<a>
Cons1 : forall<a> (head : a, tail : list<a>) -> list1<a>
Leaf : forall<a> (value : a) -> tree<a>
Node : forall<a> (left : tree<a>, right : tree<a>) -> tree<a>
balance : forall<a> (xs : list1<(tree<a>, int)>) -> div tree<a>
build : forall<a,h> (depth : int, xs : list1<(a, ref<h,int>)>) -> <div,read<h>> (tree<a>, list<(a, ref<h,int>)>)
extract : forall<a> (before : list<(tree<a>, int)>, after : list1<(tree<a>, int)>) -> div tree<a>
garciawachs : forall<a> (xs : list1<(a, int)>) -> div tree<a>
head : forall<a> (list1 : list1<a>) -> a
insert : forall<a> (after : list<(tree<a>, int)>, t : (tree<a>, int), before : list<(tree<a>, int)>) -> div tree<a>
isLeaf : forall<a> (tree : tree<a>) -> bool
isNode : forall<a> (tree : tree<a>) -> bool
left : forall<a> (tree : tree<a>) -> exn tree<a>
main : () -> <div,console> ()
map : forall<a,b,e> (xs : list1<a>, f : (a) -> e b) -> e list1<b>
mark : forall<a,h> (depth : int, t : tree<(a, ref<h,int>)>) -> (write<h>) ()
right : forall<a> (tree : tree<a>) -> exn tree<a>
show : (t : tree<char>) -> string
tail : forall<a> (list1 : list1<a>) -> list<a>
test : () -> div string
value : forall<a> (tree : tree<a>) -> exn a
zip : forall<a,b> (xs : list1<a>, ys : list1<b>) -> list1<(a, b)>