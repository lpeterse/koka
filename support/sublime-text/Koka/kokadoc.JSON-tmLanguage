{ "name": "Koka Documentation",
  "scopeName": "source.kokadoc",
  "fileTypes": ["kkdoc"],
  "patterns": [
  	
    { "begin": "^\\s*\"\"?\\s*$"
  	, "end": "^\\s*\"\\s*$"
  	, "contentName": "source.embedded.koka"
  	, "beginCaptures": { "0": { "name": "meta.tag.block.any.html" } }
  	, "endCaptures": { "0": { "name": "meta.tag.block.any.html" } }
  	, "patterns": [
  		{ "match": "^\\s*\"\"\\s*$"
  		, "name": "meta.tag.block.any.html"
  		},
  		{ "include": "source.koka" }
  	  ]
  	},

  	{ "match": "\\\"\\\""
    , "name": "html"
    },

    { "match": "(\")(:\\s*\\??([a-z_]\\w*|\\(,*\\)|<\\|?>))(\")"
  	, "name": "source.embedded.koka"
  	, "captures": {
  		"2": { "name": "storage.type.constant.koka" }
  	  }
  	},

	  { "begin": "\"(?!\")"
  	, "end": "\"(?!\")|$"
  	, "name": "source.embedded.koka"
  	, "patterns": [
  		{ "match": "\"(?=\")"
  		},
  		{ "include": "source.koka" }
  	  ]
  	},

    { "begin": "^```\\s*koka\\s*$"
    , "end": "^```\\s*$"
    , "contentName": "source.embedded.koka"
    , "beginCaptures": { "0": { "name": "meta.tag.block.any.html" } }
    , "endCaptures": { "0": { "name": "meta.tag.block.any.html" } }
    , "patterns": [
      { "match": "^\\s*\"\"\\s*$"
      , "name": "meta.tag.block.any.html"
      },
      { "include": "source.koka" }
      ]
    },

  	{ "begin": "^\\s*```\\s*((?!koka\\b)\\w+\\s*)?$"
  	, "end": "^\\s*```"
  	, "contentName": "source.embedded"
  	, "beginCaptures": { "0": { "name": "meta.tag.block.any.html" } }
  	, "endCaptures": { "0": { "name": "meta.tag.block.any.html" } }
  	, "patterns": [
  		]
  	},

    { "match": "\\|//\\||\\|/\\*\\|"
    , "name": "source.embedded.koka"
    },

	  { "match": "`[^`]*`"
  	, "name": "source.embedded.koka"
  	},

    { "match": "_([^_\n]|_\\w)*_"
    , "name": "markup.quote" 
    },

    { "match": "\\*([^\\*\n]|\\*\\w)*\\*"
    , "name": "enitity.name.section" 
    },

    { "match": "^\\s*#+.*$"
    , "name": "markup.heading" 
    },

    { "match": "\\[([^\\]\\n]*)\\](?!:)\\s*(\\(([^\\)\\n]*)\\))?"
    , "captures": {
      "1": { "name": "meta.tag" },
      "3": { "name": "string" }
      }
    },

    { "match": "^\\s*\\[([^\\]\\n]*)\\]:(.*)$"
    , "captures": {
      "1": { "name": "meta.tag" },
      "3": { "name": "string" }
      }
    },


  	{ "include": "text.html.basic" }
  ],
  "uuid": "6ff96ac2-ae7c-4c81-9f2a-50f4f62a0d87"
}
